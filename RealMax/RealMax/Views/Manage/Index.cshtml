@model RealMax.Models.IndexViewModel
@{
    ViewBag.Title = "Manage";
}
<div class="container">
    <h2>@ViewBag.Title.</h2>

    <p class="text-success">@ViewBag.StatusMessage</p>
    <div>
        <h4>Change your account settings</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>Password:</dt>
            <dd>
                [
                @if (Model.HasPassword)
            {
                    @Html.ActionLink("Change your password", "ChangePassword")
                }
                else
                {
                    @Html.ActionLink("Create", "SetPassword")
                }
                ]
            </dd>
            <dt>External Logins:</dt>
            <dd>
                @Model.Logins.Count [
                @Html.ActionLink("Manage", "ManageLogins") ]
            </dd>
            @*
                Phone Numbers can used as a second factor of verification in a two-factor authentication system.

                 See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                    for details on setting up this ASP.NET application to support two-factor authentication using SMS.

                 Uncomment the following block after you have set up two-factor authentication
            *@
            @*
                <dt>Phone Number:</dt>
                <dd>
                    @(Model.PhoneNumber ?? "None")
                    @if (Model.PhoneNumber != null)
                    {
                        <br />
                        <text>[&nbsp;&nbsp;@Html.ActionLink("Change", "AddPhoneNumber")&nbsp;&nbsp;]</text>
                        using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <text>[<input type="submit" value="Remove" class="btn-link" />]</text>
                        }
                    }
                    else
                    {
                        <text>[&nbsp;&nbsp;@Html.ActionLink("Add", "AddPhoneNumber")
                    }
                </dd>
            *@
            <dt>Two-Factor Authentication:</dt>
            <dd>
                <p>
                    There are no two-factor authentication providers configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                    for details on setting up this ASP.NET application to support two-factor authentication.
                </p>
                @*@if (Model.TwoFactor)
                    {
                        using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <text>Enabled
                            <input type="submit" value="Disable" class="btn btn-link" />
                            </text>
                        }
                    }
                    else
                    {
                        using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <text>Disabled
                            <input type="submit" value="Enable" class="btn btn-link" />
                            </text>
                        }
                    }*@
            </dd>
            @if (User.IsInRole("Admin"))
            {
                <dt>
                    Add, remove, or change a Realtor
                </dt>
                <dd>
					<span>
						<a href="@Url.Action("Create","Realtor")" class="btn btn-default">Add a realtor</a>

						<a href="@Url.Action("Remove","Realtor")" class="btn btn-default">Remove a realtor</a>

						<a href="@Url.Action("EditList", "Realtor")" class="btn btn-default">Edit a realtor</a>
					</span>
                </dd>

            }
            @if(User.IsInRole("Admin") || User.IsInRole("Realtor"))
            {
                <dt>
                    Add, remove, or change a Listing
                </dt>
                <dd>
					<span>
						<a href="@Url.Action("Create", "Listing")" class="btn btn-default">Add a new Listing</a>

						<a href="@Url.Action("Remove","Listing")" class="btn btn-default">Remove a Listing</a>

						<a href="@Url.Action("EditList", "Listing")" class="btn btn-default">Edit a Listing</a>
					</span>
					<span>
						
					</span>
                </dd>
            }
            @if (User.IsInRole("Admin"))
            {
                <dt>
                    Manage User Rolls:
                </dt>
                <dd>
                    <a href="@Url.Action("ManageUserRolls")">View and change user rolls</a>
                </dd>
            }
        </dl>
    </div>
</div>